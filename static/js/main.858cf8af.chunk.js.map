{"version":3,"sources":["components/Screen/Screen.module.css","components/Button/Button.module.css","hoc/Layout/Layout.module.css","components/Calculator/Calculator.module.css","components/Keypad/Keypad.module.css","assets/images/calc_desktop.png","components/Screen/Screen.js","components/constants.js","components/Button/Button.js","components/Keypad/Keypad.js","store/types.js","expressions/calculate.js","store/reducers/calculateReducer.js","store/storeIndex.js","components/Calculator/Calculator.js","store/actions/calculate.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Screen","HalfScreen","TopScreen","BottomScreen","Button","SpecialButton","RegularButton","Layout","Calculator","Keypad","__webpack_require__","p","screen","props","expression","total","react_default","a","createElement","className","classes","lib","max","throttle","mode","join","keypadKeys","specialKeys","_this$props","this","buttonKey","onButtonClick","classNames","includes","trim","onClick","e","target","textContent","type","React","PureComponent","keypad","handleClick","key","clear","delete","evaluate","percent","flipSignOperation","dotInput","dividingByZero","calculate","buttons","map","block","components_Button_Button","SET_EXPRESSION","expressions_calculate","matched","RegExp","exec","test","Error","Function","concat","math","create","all","initialState","calculateReducer","state","arguments","length","undefined","action","types","_ref","payload","slice","setExpression","Object","objectSpread","exp","delTotal","split","matchExp","match","newExp","newTotal","replace","numToPerc","afterPerc","Number","lastNumb","expAfterSlip","rootReducer","combineReducers","calculator","getExpression","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","getTotal","connect","fromCalculator","dispatch","_useState","useState","innerWidth","_useState2","slicedToArray","windowWidth","setWindowWidth","image","desktopImg","handleWindowResize","useEffect","addEventListener","removeEventListener","style","backgroundImage","components_Calculator_Calculator","App","hoc_Layout_Layout","Boolean","location","hostname","store","reducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.858cf8af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Screen\":\"Screen_Screen__2E5-R\",\"HalfScreen\":\"Screen_HalfScreen__1YOrq\",\"TopScreen\":\"Screen_TopScreen__up1fM\",\"BottomScreen\":\"Screen_BottomScreen__3U026\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1vaie\",\"SpecialButton\":\"Button_SpecialButton__kUt5D\",\"RegularButton\":\"Button_RegularButton__33jFk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__yCcGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calculator\":\"Calculator_Calculator__1rOll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Keypad\":\"Keypad_Keypad__2ZbW4\"};","module.exports = __webpack_public_path__ + \"static/media/calc_desktop.52788978.png\";","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { Textfit } from 'react-textfit';\r\n\r\nimport classes from './Screen.module.css';\r\n\r\nconst screen = (props) => {\r\n  const { expression, total } = props;\r\n\r\n  return (\r\n    <div className={classes.Screen}>\r\n      <Textfit\r\n        max={24}\r\n        throttle={60}\r\n        mode=\"single\"\r\n        className={[classes.HalfScreen, classes.TopScreen].join(' ')}\r\n      >\r\n        <span>{expression}</span>\r\n      </Textfit>\r\n      <Textfit\r\n        max={48}\r\n        mode=\"single\"\r\n        className={[classes.HalfScreen, classes.BottomScreen].join(' ')}\r\n      >\r\n        <span>{total}</span>\r\n      </Textfit>\r\n    </div>\r\n  );\r\n};\r\n\r\nscreen.propTypes = {\r\n  expression: propTypes.string.isRequired,\r\n  total: propTypes.oneOfType([\r\n    propTypes.string,\r\n    propTypes.number,\r\n  ]).isRequired,\r\n};\r\n\r\nexport default screen;\r\n","export const keypadKeys = [\r\n  ['C', '+/-', '%', '/'],\r\n  ['1', '2', '3', '*'],\r\n  ['4', '5', '6', '-'],\r\n  ['7', '8', '9', '+'],\r\n  ['0', '.', 'DEL', '='],\r\n];\r\n\r\nexport const specialKeys = ['/', '*', '-', '+', '='];\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport classes from './Button.module.css';\r\nimport { specialKeys } from '../constants';\r\n\r\nclass Button extends React.PureComponent {\r\n  render() {\r\n    const { buttonKey, onButtonClick } = this.props;\r\n    const handleClick = (e) => { onButtonClick(e.target.textContent); };\r\n    const classNames = [\r\n      classes.Button,\r\n      specialKeys.includes(buttonKey) ? classes.SpecialButton : classes.RegularButton,\r\n    ];\r\n\r\n    return (\r\n      <button\r\n        className={classNames.join(' ').trim()}\r\n        onClick={handleClick}\r\n        type=\"button\"\r\n      >\r\n        {buttonKey}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  buttonKey: propTypes.string.isRequired,\r\n  onButtonClick: propTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport Button from '../Button/Button';\r\nimport { keypadKeys } from '../constants';\r\nimport classes from './Keypad.module.css';\r\n\r\n\r\nconst keypad = (props) => {\r\n  const handleClick = (key) => {\r\n    switch (key) {\r\n      case 'C':\r\n        props.clear();\r\n        break;\r\n      case 'DEL':\r\n        props.delete();\r\n        break;\r\n      case '=':\r\n        props.evaluate();\r\n        break;\r\n      case '%':\r\n        props.percent();\r\n        break;\r\n      case '+/-':\r\n        props.flipSignOperation();\r\n        break;\r\n      case '.':\r\n        props.dotInput();\r\n        break;\r\n      case '0':\r\n        props.dividingByZero(key);\r\n        break;\r\n      default:\r\n        props.calculate(key);\r\n    }\r\n  };\r\n\r\n  const buttons = keypadKeys.map((block) => {\r\n    return block.map((key) => {\r\n      return (\r\n        <Button\r\n          key={key}\r\n          buttonKey={key}\r\n          onButtonClick={handleClick}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  return <div className={classes.Keypad}>{buttons}</div>;\r\n};\r\n\r\nkeypad.propTypes = {\r\n  clear: propTypes.func.isRequired,\r\n  delete: propTypes.func.isRequired,\r\n  evaluate: propTypes.func.isRequired,\r\n  calculate: propTypes.func.isRequired,\r\n  percent: propTypes.func.isRequired,\r\n  flipSignOperation: propTypes.func.isRequired,\r\n  dotInput: propTypes.func.isRequired,\r\n  dividingByZero: propTypes.func.isRequired,\r\n};\r\n\r\nexport default keypad;\r\n","export const SET_EXPRESSION = 'SET_EXPRESSION';\r\n\r\nexport const CLEAR_EXPRESSION = 'CLEAR_EXPRESSION';\r\n\r\nexport const DELETE_LAST_EXPRESSION_ENTRY = 'DELETE_LAST_EXPRESSION_ENTRY';\r\n\r\nexport const EVALUATE_EXPRESSION = 'EVALUATE_EXPRESSION';\r\n\r\nexport const PERCENT = 'PERCENT';\r\n\r\nexport const FLIP_SIGN_OPERATION = 'FLIP_SIGN_OPERATION';\r\n\r\nexport const DOT_INPUT = 'DOT_INPUT';\r\n\r\nexport const DIVIDING_BY_ZERO = 'DIVIDING_BY_ZERO';\r\n","export default (expression) => {\r\n  const matched = (new RegExp('([\\\\d]+\\\\.?[\\\\d]*)?([-+/*][\\\\d]+\\\\.?[\\\\d]*)*')).exec(expression);\r\n\r\n  if (!matched) {\r\n    return 0;\r\n  }\r\n\r\n\r\n  if (/^[*+\\/]/.test(expression)) {\r\n    return () => {\r\n      throw new Error('Cannot start the expression with invalid operators');\r\n    };\r\n  }\r\n\r\n  return new Function(`return ${matched[0]}`)();\r\n};\r\n","import { create, all } from 'mathjs';\r\n\r\nimport * as types from '../types';\r\nimport calculate from '../../expressions/calculate';\r\n\r\nconst config = { };\r\nconst math = create(all, config);\r\n\r\nconst initialState = {\r\n  expression: '',\r\n  total: 0,\r\n\r\n};\r\n\r\nfunction setExpression({ expression, total }, action) {\r\n  if (/[\\d]*[-+%*/.]$/.exec(expression) && /[-+%*/.]/.exec(action.payload)) {\r\n    expression = expression.slice(0, expression.length - 1);\r\n  }\r\n\r\n  switch (action.type) {\r\n    case types.SET_EXPRESSION:\r\n      if (['+', '/', '*', '%'].includes(action.payload) && !expression) {\r\n        return `${total}${action.payload}`;\r\n      }\r\n      return `${!expression && total ? total : ''}${expression\r\n        + action.payload}`;\r\n    default:\r\n      return expression;\r\n  }\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_EXPRESSION: {\r\n      const expression = setExpression(state, action);\r\n      return {\r\n        ...state,\r\n        expression,\r\n        total: calculate(expression) || state.total,\r\n      }; }\r\n    case types.CLEAR_EXPRESSION:\r\n      return {\r\n        ...state,\r\n        expression: '',\r\n        total: 0,\r\n      };\r\n    case types.DELETE_LAST_EXPRESSION_ENTRY: {\r\n      const exp = state.expression;\r\n      const delTotal = exp\r\n        .split('')\r\n        .slice(0, exp.length - 1)\r\n        .join('');\r\n      const matchExp = delTotal.match(/([\\d]|\\))([\\D])$/);\r\n      let newExp = '';\r\n      const delExp = '';\r\n\r\n      if (delTotal.match(/(\\D|)(\\()(-\\d+)$/)) {\r\n        newExp = delTotal.replace(/(\\D|)(\\()(-\\d+)$/, '');\r\n      } else {\r\n        newExp = (matchExp === null) ? delTotal : delTotal.split('').slice(0, delTotal.length - 1).join('');\r\n      }\r\n      const newTotal = (newExp.length === 0) ? 0 : newExp;\r\n      return {\r\n        ...state,\r\n        expression: (newTotal === 0) ? delExp : newTotal,\r\n        total: math.evaluate(newTotal),\r\n      }; }\r\n    case types.EVALUATE_EXPRESSION: {\r\n      const exp = state.expression;\r\n      const newTotal = (exp.length === 0) ? 0 : math.evaluate(exp);\r\n      return {\r\n        ...state,\r\n        expression: '',\r\n        total: newTotal,\r\n      }; }\r\n    case types.PERCENT: {\r\n      const exp = state.expression;\r\n      const numToPerc = exp.match(/[0-9.,]+$/)[0];\r\n      const afterPerc = Number(numToPerc) / 100;\r\n      const newExp = exp.replace(/[0-9.,]+$/, afterPerc);\r\n      return {\r\n        ...state,\r\n        expression: newExp,\r\n        total: math.evaluate(newExp),\r\n      }; }\r\n    case types.FLIP_SIGN_OPERATION: {\r\n      const exp = state.expression;\r\n      const lastNumb = exp.match(/(\\()([^\\d]|)([0-9.,]+)(\\)$)|([^\\d]|)([0-9.,]+$)/);\r\n      let expAfterSlip = '';\r\n      if (lastNumb[1] === '(') {\r\n        expAfterSlip = exp.replace(/(\\()([^\\d]|)([0-9.,]+)(\\)$)|([^\\d]|)([0-9.,]+$)/, '$3');\r\n      }\r\n      if ((lastNumb[5] !== '-' && lastNumb[5] !== undefined) || (lastNumb[5] !== '+' && lastNumb[5] !== undefined)) {\r\n        expAfterSlip = exp.replace(/(\\()([^\\d]|)([0-9.,]+)(\\)$)|([^\\d]|)([0-9.,]+$)/, '$5(-$6)');\r\n      }\r\n      if (lastNumb[5] === '-') {\r\n        expAfterSlip = exp.replace(/(\\()([^\\d]|)([0-9.,]+)(\\)$)|([^\\d]|)([0-9.,]+$)/, '+$6');\r\n      }\r\n      if (lastNumb[5] === '+') {\r\n        expAfterSlip = exp.replace(/(\\()([^\\d]|)([0-9.,]+)(\\)$)|([^\\d]|)([0-9.,]+$)/, '-$6');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        expression: expAfterSlip,\r\n        total: math.evaluate(expAfterSlip),\r\n      }; }\r\n    case types.DOT_INPUT: {\r\n      const exp = state.expression;\r\n      let newExp = exp;\r\n      if (!newExp.includes('.')) {\r\n        newExp += '.';\r\n      }\r\n      return {\r\n        ...state,\r\n        expression: newExp,\r\n        total: math.evaluate(newExp),\r\n      }; }\r\n    case types.DIVIDING_BY_ZERO: {\r\n      const exp = state.expression;\r\n      const newExp = `${exp}0`;\r\n      let newTotal = '';\r\n      if (newExp.includes('/0')) {\r\n        newTotal = \"Don't divide by ZERO!\";\r\n      } else {\r\n        newTotal = math.evaluate(newExp);\r\n      }\r\n      return {\r\n        ...state,\r\n        expression: newExp,\r\n        total: newTotal,\r\n      }; }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* eslint no-underscore-dangle: 0 */\r\nimport { createStore, combineReducers } from 'redux';\r\nimport calculateReducer from './reducers/calculateReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  calculator: calculateReducer,\r\n});\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nexport const getExpression = (state) => {\r\n  return state.expression;\r\n};\r\n\r\nexport const getTotal = (state) => {\r\n  return state.total;\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './Calculator.module.css';\r\nimport Screen from '../Screen/Screen';\r\nimport Keypad from '../Keypad/Keypad';\r\nimport * as fromCalculator from '../../store/storeIndex';\r\nimport {\r\n  calculate, \r\n  deleteLastEntry,\r\n  clear,\r\n  evaluateExpression,\r\n  percent,\r\n  flipSignOperation,\r\n  dotInput,\r\n  dividingByZero,\r\n} from '../../store/actions/calculate';\r\n\r\nconst Calculator = (props) => {\r\n  return (\r\n    <div className={classes.Calculator}>\r\n      <Screen {...props} />\r\n      <Keypad {...props} />\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    expression: fromCalculator.getExpression(state),\r\n    total: fromCalculator.getTotal(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    calculate: (buttonKey) => {\r\n      dispatch(calculate(buttonKey));\r\n    },\r\n    delete: () => {\r\n      dispatch(deleteLastEntry());\r\n    },\r\n    clear: () => {\r\n      dispatch(clear());\r\n    },\r\n    evaluate: () => {\r\n      dispatch(evaluateExpression());\r\n    },\r\n    percent: () => {\r\n      dispatch(percent());\r\n    },\r\n    flipSignOperation: () => {\r\n      dispatch(flipSignOperation());\r\n    },\r\n    dotInput: () => {\r\n      dispatch(dotInput());\r\n    },\r\n    dividingByZero: () => {\r\n      dispatch(dividingByZero());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Calculator);\r\n","import * as types from '../types';\r\n\r\nexport const calculate = (key) => {\r\n  return {\r\n    type: types.SET_EXPRESSION,\r\n    payload: key,\r\n  };\r\n};\r\n\r\n\r\nexport const clear = () => {\r\n  return {\r\n    type: types.CLEAR_EXPRESSION,\r\n  };\r\n};\r\n\r\nexport const deleteLastEntry = () => {\r\n  return {\r\n    type: types.DELETE_LAST_EXPRESSION_ENTRY,\r\n  };\r\n};\r\n\r\n\r\nexport const evaluateExpression = () => {\r\n  return {\r\n    type: types.EVALUATE_EXPRESSION,\r\n  };\r\n};\r\n\r\nexport const percent = () => {\r\n  return {\r\n    type: types.PERCENT,\r\n  };\r\n};\r\n\r\nexport const flipSignOperation = () => {\r\n  return {\r\n    type: types.FLIP_SIGN_OPERATION,\r\n  };\r\n};\r\n\r\nexport const dotInput = () => {\r\n  return {\r\n    type: types.DOT_INPUT,\r\n  };\r\n};\r\n\r\nexport const dividingByZero = (key) => {\r\n  return {\r\n    type: types.DIVIDING_BY_ZERO,\r\n    payload: key,\r\n  };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nimport classes from './Layout.module.css';\r\nimport Calculator from '../../components/Calculator/Calculator';\r\nimport desktopImg from '../../assets/images/calc_desktop.png';\r\n\r\n\r\nconst Layout = (props) => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const image = windowWidth >= 650 ? `url(${desktopImg})` : 'none';\r\n\r\n  const handleWindowResize = () => {\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleWindowResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleWindowResize);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Layout} style={{ backgroundImage: image }}>\r\n      <Calculator {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\n\r\nimport Layout from './hoc/Layout/Layout';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Layout />\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reducer from './store/reducers/calculateReducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}